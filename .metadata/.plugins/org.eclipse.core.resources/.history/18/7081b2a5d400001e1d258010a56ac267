package runner;

import java.util.ArrayList;

import model.Activity;
import model.Destination;
import model.Passenger;
import model.TravelPackage;

public class Booking {
	
	private final static double GOLDDICOUNT=0.9;


	public double packageCost(ArrayList<Destination> itineraryDTO,String passengerType) {
		double cost=0.0;
		 for(int i =0;i<itineraryDTO.size();i++) {
			 ArrayList<Activity> activityDTO=itineraryDTO.get(i).getActivitiesList();
			 for(int j=0;j<activityDTO.size();j++) {
				 double eachActivityCost=activityDTO.get(i).getCost();
				 cost=cost+eachActivityCost;
			 }
		 }
		 if(passengerType=="standard") 
			 return cost;
		 else if(passengerType=="gold")
			 return cost*GOLDDICOUNT;
		 else if(passengerType=="premium")
			 return 0.0;
		 else
			 return cost;
	}
	
	public boolean capacityCheck(Activity activityDTO,Passenger passengerDTO) {
		int capacity =activityDTO.getCapacity();
		int activityCost = activityDTO.getCost();
		if(capacity>0 && passengerDTO.getWalletBalance()>=activityCost) 
			return true;
		
		else
			return false;
	}
	
}
