package runner;
import java.sql.*;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Objects;
import java.util.Scanner;

import model.Activity;
import model.Passenger;
import model.TravelPackage;
import utill.DataRetrieval;

public class TravelAgency {
	private static final String DB_URL = "jdbc:mysql://localhost/nymbletms";
    private static final String DB_USER = "root";
    private static final String DB_PASSWORD = "root";
    
    
	public static void main(String[] args) {
		try (Connection connection = DriverManager.getConnection(DB_URL, DB_USER, DB_PASSWORD)) {
           System.out.println("Please enter your USER_CRED");
           Scanner sc = new Scanner(System.in);
           String name = sc.nextLine();
           int pNumber = sc.nextInt();
           sc.nextLine();
           Passenger passenger=DataRetrieval.retrievePassengersFromDatabase(connection,name,pNumber);
           if(Objects.isNull(passenger)) {
        	   System.out.println("Not registered customer please signup");
        	   System.exit(1);
           }
           String welcmMsq = "Hi! "+passenger.getPassengerName()+" Welcome to Nymble's Make your trip";
           System.out.println(welcmMsq);
           double balance = passenger.getWalletBalance();
           final String ptype = passenger.getPassengerType();
           System.out.println("your wallet ballane as of now is "+balance+" and you are our's "+ptype+" passenger");
           
           /////////
           
           ArrayList<TravelPackage> packageList= DataRetrieval.retrieveTravelPackageFromDB(connection);
           System.out.println("List of available Packages are");
           
           for (TravelPackage i : packageList) {
        	   System.out.println(i.getId()+"st package name: "+i.getPackageName());
        	   System.out.println("Capacity left for "+i.getId()+" Package is "+i.getPassengerCapacity());
           }
           System.out.println("Please select a package name");
           
           String selectedPackageName = sc.nextLine();
           System.out.println("----------------------------");
           TravelPackage selectPackage=null;
           for (TravelPackage i : packageList) {
        	   if(i.getPackageName().equalsIgnoreCase(selectedPackageName)) {
        		   selectPackage=i;
        		   
        	   }
        	   
           }
           PassengersDetails.printItinerary(selectPackage);
           ////////////
           System.out.println("Please select the destination ,activty and number of Adults");
           String selectedDestination = sc.nextLine();
           String selectedActivity = sc.nextLine();
           int numberOfAdults = sc.nextInt();
           HashMap<String,Object> costCpacityMap =  DataRetrieval.retrieveCostAndCapacity(selectPackage, selectedActivity, selectedDestination);
           
            double finalCost = Booking.packageCost(ptype, numberOfAdults,(double) costCpacityMap.get("cost"));
            if((int)costCpacityMap.get("capacity")<numberOfAdults) {
            	System.out.println("we have only "+costCpacityMap.get("capacity")+" these many seats available please choose accordingly");
            	System.exit(1);
            }
            else if((double)costCpacityMap.get("cost")>passenger.getWalletBalance()) {
            	System.out.println("insufficient wallet balance");
            	System.exit(1);

            }
            else {
            System.out.println("For the chosen itenary total cost would be ="+finalCost);
            System.out.println("Do you want to continue with this package ");
            }
           /////////////
            String response = sc.nextLine();
            if(response.equalsIgnoreCase("yes")) {
            	int updatedCpacity = (int)costCpacityMap.get("capacity")-numberOfAdults;
            	DataRetrieval.updateCapacity(connection, selectPackage, selectedActivity, updatedCpacity);
            }
            else {
            	System.out.println("thanks for your time");
            	System.exit(1);
            }
           sc.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }

	}

}
